"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHostedZoneID = exports.getHostedZone = exports.addSubdomain = void 0;
var Route53 = _interopRequireWildcard(require("@aws-sdk/client-route-53"));
var _helpers = require("./helpers.js");
var _stack = require("./stack.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var AWS, addSubdomain, getHostedZone, getHostedZoneID, getTLD;
exports.getHostedZoneID = getHostedZoneID;
exports.getHostedZone = getHostedZone;
exports.addSubdomain = addSubdomain;
AWS = {
  Route53: (0, _helpers.lift)(Route53)
};
getTLD = function (domain) {
  return domain.split(".").slice(-2).join(".");
};
exports.getHostedZone = getHostedZone = async function (domain) {
  var HostedZones, i, len, zone;
  ({
    HostedZones
  } = await AWS.Route53.listHostedZones({
    MaxItems: "100"
  }));
  for (i = 0, len = HostedZones.length; i < len; i++) {
    zone = HostedZones[i];
    if (domain === zone.Name.slice(0, -1)) {
      return {
        _: zone,
        id: zone.Id
      };
    }
  }
  return void 0;
};
exports.getHostedZoneID = getHostedZoneID = async function (domain) {
  return (await getHostedZone(domain)).id;
};
exports.addSubdomain = addSubdomain = async function (domain, target) {
  return (0, _stack.deployStack)("domain-" + domain.replaceAll(".", "-"), {
    AWSTemplateFormatVersion: "2010-09-09",
    Description: `Create subdomain [ ${domain} ]`,
    Resources: {
      Subdomain: {
        Type: "AWS::Route53::RecordSetGroup",
        Properties: {
          HostedZoneId: await getHostedZoneID(getTLD(domain)),
          RecordSets: [{
            Name: domain,
            Type: "A",
            AliasTarget: {
              DNSName: target,
              EvaluateTargetHealth: false,
              HostedZoneId: "Z2FDTNDATAQYW2"
            }
          }]
        }
      }
    }
  });
};
//# sourceMappingURL=data:application/json;base64,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LENBQUE7QUFTaEIsT0FBQSxDQUFBLGVBQUEsR0FBQSxlQUFBLEdBQWtCLGVBQUEsQ0FBQyxNQUFELEVBQUE7U0FBWSxDQUFFLE1BQU0sYUFBQSxDQUFjLE1BQWQsQ0FBUixFQUErQixFQUFBO0FBQTNDLENBQUE7QUFFbEIsT0FBQSxDQUFBLFlBQUEsR0FBQSxZQUFBLEdBQWUsZUFBQSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQUE7U0FDYixJQUFBLGtCQUFBLEVBQWMsU0FBQSxHQUFZLE1BQU0sQ0FBQyxVQUFQLENBQWtCLEdBQWxCLEVBQXVCLEdBQXZCLENBQTFCLEVBQ0U7SUFBQSx3QkFBQSxFQUEwQixZQUExQjtJQUNBLFdBQUEsRUFBYSxzQkFBQSxNQUFBLElBRGI7SUFFQSxTQUFBLEVBQ0U7TUFBQSxTQUFBLEVBQ0U7UUFBQSxJQUFBLEVBQU0sOEJBQU47UUFDQSxVQUFBLEVBQ0U7VUFBQSxZQUFBLEVBQWMsTUFBTSxlQUFBLENBQWdCLE1BQUEsQ0FBTyxNQUFQLENBQXRCLENBQWQ7VUFDQSxVQUFBLEVBQVksQ0FDVjtZQUFBLElBQUEsRUFBTSxNQUFOO1lBQ0EsSUFBQSxFQUFNLEdBRE47WUFFQSxXQUFBLEVBQ0U7Y0FBQSxPQUFBLEVBQVMsTUFBVDtjQUNBLG9CQUFBLEVBQXNCLEtBRHRCO2NBRUEsWUFBQSxFQUFjO1lBRmQ7VUFIRixDQURVO1FBRFo7TUFGRjtJQURGO0VBSEYsQ0FERixDQUFBO0FBRGEsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJvdXRlNTMgZnJvbSBcIkBhd3Mtc2RrL2NsaWVudC1yb3V0ZS01M1wiXG5pbXBvcnQgeyBsaWZ0IH0gZnJvbSBcIi4vaGVscGVyc1wiXG5pbXBvcnQgeyBkZXBsb3lTdGFjayB9IGZyb20gXCIuL3N0YWNrXCJcblxuQVdTID1cbiAgUm91dGU1MzogbGlmdCBSb3V0ZTUzXG5cbmdldFRMRCA9IChkb21haW4pIC0+ICgoIGRvbWFpbi5zcGxpdCBcIi5cIiApWy0yLi5dKS5qb2luIFwiLlwiXG5cbmdldEhvc3RlZFpvbmUgPSAoZG9tYWluKSAtPlxuICB7IEhvc3RlZFpvbmVzIH0gPSBhd2FpdCBBV1MuUm91dGU1My5saXN0SG9zdGVkWm9uZXMgTWF4SXRlbXM6IFwiMTAwXCJcbiAgZm9yIHpvbmUgaW4gSG9zdGVkWm9uZXNcbiAgICBpZiBkb21haW4gPT0gem9uZS5OYW1lWy4uLTJdXG4gICAgICByZXR1cm5cbiAgICAgICAgXzogem9uZVxuICAgICAgICBpZDogem9uZS5JZFxuICB1bmRlZmluZWRcblxuZ2V0SG9zdGVkWm9uZUlEID0gKGRvbWFpbikgLT4gKCBhd2FpdCBnZXRIb3N0ZWRab25lIGRvbWFpbiApLmlkXG5cbmFkZFN1YmRvbWFpbiA9IChkb21haW4sIHRhcmdldCkgLT5cbiAgZGVwbG95U3RhY2sgKCBcImRvbWFpbi1cIiArIGRvbWFpbi5yZXBsYWNlQWxsIFwiLlwiLCBcIi1cIiApLFxuICAgIEFXU1RlbXBsYXRlRm9ybWF0VmVyc2lvbjogXCIyMDEwLTA5LTA5XCJcbiAgICBEZXNjcmlwdGlvbjogXCJDcmVhdGUgc3ViZG9tYWluIFsgI3tkb21haW59IF1cIlxuICAgIFJlc291cmNlczpcbiAgICAgIFN1YmRvbWFpbjpcbiAgICAgICAgVHlwZTogXCJBV1M6OlJvdXRlNTM6OlJlY29yZFNldEdyb3VwXCJcbiAgICAgICAgUHJvcGVydGllczpcbiAgICAgICAgICBIb3N0ZWRab25lSWQ6IGF3YWl0IGdldEhvc3RlZFpvbmVJRCBnZXRUTEQgZG9tYWluXG4gICAgICAgICAgUmVjb3JkU2V0czogW1xuICAgICAgICAgICAgTmFtZTogZG9tYWluXG4gICAgICAgICAgICBUeXBlOiBcIkFcIlxuICAgICAgICAgICAgQWxpYXNUYXJnZXQ6XG4gICAgICAgICAgICAgIEROU05hbWU6IHRhcmdldFxuICAgICAgICAgICAgICBFdmFsdWF0ZVRhcmdldEhlYWx0aDogZmFsc2VcbiAgICAgICAgICAgICAgSG9zdGVkWm9uZUlkOiBcIloyRkRUTkRBVEFRWVcyXCJcbiAgICAgICAgICBdXG5cbiAgIyBUT0RPIEkgY291bGRuJ3QgZ2V0IHRoaXMgdG8gd29ya1xuICAjIGJ1dCB0aGlzIHdvdWxkIHByb2JhYmx5IHJ1biBtdWNoIGZhc3Rlcj9cbiAgIyBrZXB0IGdldHRpbmcgaW52YWxpZCBpbnB1dCBlcnJvcnNcbiAgIyBBV1MuUm91dGU1My5jaGFuZ2VSZXNvdXJjZVJlY29yZFNldHNcbiAgIyAgIEhvc3RlZFpvbmVJZDogYXdhaXQgZ2V0SG9zdGVkWm9uZUlEIGdldFRMRCBkb21haW5cbiAgIyAgIENoYW5nZUJhdGNoOlxuICAjICAgICBDaGFuZ2VzOiBbXG4gICMgICAgICAgQWN0aW9uOiBcIlVQU0VSVFwiXG4gICMgICAgICAgUmVzb3VyY2VSZWNvcmRTZXQ6XG4gICMgICAgICAgICBOYW1lOiBcIiN7IGRvbWFpbiB9LlwiXG4gICMgICAgICAgICBUeXBlOiBcIkFcIlxuICAjICAgICAgICAgVFRMOiAzMDBcbiAgIyAgICAgICAgIEFsaWFzVGFyZ2V0OlxuICAjICAgICAgICAgICBETlNOYW1lOiBcIiN7IHRhcmdldCB9LlwiXG4gICMgICAgICAgICAgIEV2YWx1YXRlVGFyZ2V0SGVhbHRoOiBmYWxzZVxuICAjICAgICAgICAgICBIb3N0ZWRab25lSWQ6IFwiWjJGRFROREFUQVFZVzJcIlxuICAjICAgICBdXG5cbmV4cG9ydCB7XG4gIGdldEhvc3RlZFpvbmVcbiAgZ2V0SG9zdGVkWm9uZUlEXG4gIGFkZFN1YmRvbWFpblxufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=src/route53.coffee